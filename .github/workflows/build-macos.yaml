name: Build-macOS

on:
  push:
    branches:
      - main
      - 'phase*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_macos:
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      BUILD_TYPE: Debug
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      VCPKG_FEATURE_FLAGS: "manifests,registries,versions,binarycaching"
    strategy:
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            triplet: x64-osx
          - arch: arm64
            triplet: arm64-osx
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: true
          clean: true
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          brew update
          brew install cmake ninja pkg-config

      - name: Cache vcpkg
        uses: actions/cache@v4
        id: vcpkg-cache
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            !${{ github.workspace }}/vcpkg/buildtrees
            !${{ github.workspace }}/vcpkg/packages
            !${{ github.workspace }}/vcpkg/downloads
          key: ${{ runner.os }}-${{ matrix.arch }}-vcpkg-${{ hashFiles('vcpkg.json') }}

      - name: Set up vcpkg
        run: |
          if [ ! -d "vcpkg" ]; then
            git clone https://github.com/Microsoft/vcpkg.git
          fi
          cd vcpkg
          git pull
          ./bootstrap-vcpkg.sh
          cd ..

      - name: Determine vcpkg commit
        id: vcpkg-commit
        run: echo "commit=$(git -C vcpkg rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Cache vcpkg installed
        uses: actions/cache@v4
        id: vcpkg-installed
        with:
          path: ${{ github.workspace }}/vcpkg_installed
          key: ${{ runner.os }}-${{ matrix.arch }}-vcpkg-installed-${{ matrix.triplet }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}-${{ steps.vcpkg-commit.outputs.commit }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-vcpkg-installed-${{ matrix.triplet }}-

      - name: Install dependencies with vcpkg
        if: steps.vcpkg-installed.outputs.cache-hit != 'true'
        run: |
          ./vcpkg/vcpkg install --x-manifest-root=. --x-install-root=${{ github.workspace }}/vcpkg_installed --triplet ${{ matrix.triplet }}

      - name: Build monitoring_system
        run: |
          rm -rf build
          mkdir -p build
          cd build
          
          cmake .. \
            -G Ninja \
            -DMONITORING_BUILD_TESTS=ON \
            -DMONITORING_BUILD_EXAMPLES=ON \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DCMAKE_TOOLCHAIN_FILE="$GITHUB_WORKSPACE/vcpkg/scripts/buildsystems/vcpkg.cmake" \
            -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}
          
          cmake --build . --parallel

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-macos-${{ matrix.arch }}
          path: build/Testing/
          retention-days: 7